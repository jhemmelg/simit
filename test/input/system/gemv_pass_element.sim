element Point
  b : float;
  c : float;
end

element Spring
  a : float;
end

extern points  : set{Point};
extern springs : set{Spring}(points,points);

func f(s : Spring) -> (x : float)
  x = s.a;
end

func dist_a(s : Spring, p : (Point*2)) -> (A : tensor[points,points](float))
  A(p(0),p(0)) = f(s);
  A(p(0),p(1)) = f(s);
  A(p(1),p(0)) = f(s);
  A(p(1),p(1)) = f(s);
end

export func main()
  A = map dist_a to springs reduce +;
  points.c = A * points.b;
end
