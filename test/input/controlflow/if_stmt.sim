%%% if
%! f(0) == 1;
func f(p : int) -> (r : int)
  if p == 0
    r = 1;
  end
end

%%% if-else
%! f(0) == 0;
%! f(1) == 42;
func f(p : int) -> (r : int)
  if p == 0
    r = 0;
  else
    r = 42;
  end
end

%%% if-neq
%! f(0) == 3;
%! f(1) == 1;
func f(p : int) -> (r : int)
  if p != 0
    r = 1;
  else
    r = 3;
  end
end

%%% if-elif
%! f(1) == 1;
%! f(2) == 2;
%! f(3) == 3;
func f(p : int) -> (r : int)
  if p == 1
    r = 1;
  elif p == 2
    r = 2;
  elif p == 3
    r = 3;
  end
end

%%% if-elif-else
%! f(0) == 0;
%! f(1) == 1;
%! f(2) == 2;
%! f(3) == 42;
func f(p : int) -> (r : int)
  if p == 0
    r = 0;
  elif p == 1
    r = 1;
  elif p == 2
    r = 2;
  else
    r = 42;
  end
end

%%% if-nested
%! f(2, 3) == 1;
%! f(2, 0) == 2;
%! f(3, 4) == 3;
%! f(3, 3) == 4;
func f(a : int, b : int) -> (r : int)
  if a == 2
    if b == 3
      r = 1;
    else
      r = 2;
    end
  else
    if b == 4
      r = 3;
    else
      r = 4;
    end
  end
end

%%% elif-nested
%! f(2, 3) == 1;
%! f(2, 4) == 2;
%! f(2, 0) == 3;
%! f(3, 4) == 4;
%! f(3, 7) == 5;
%! f(3, 5) == 6;
%! f(4, 5) == 7;
func f(a : int, b : int) -> (r : int)
  if a == 2
    if b == 3
      r = 1;
    elif b == 4
      r = 2;
    else
      r = 3;
    end
  elif a == 3
    if b == 4
      r = 4;
    elif b == 7
      r = 5;
    else
      r = 6;
    end
  else
    r = 7;
  end
end

%%% if-or
%! f(2) == 4;
%! f(3) == 4;
%! f(1) == 1;
func f(p : int) -> (r : int)
  if (p == 2) or (p == 3)
    r = 4;
  else
    r = 1;
  end
end

%%% if-true-1
%! f(0) == 1;
%! f(1) == 1;
func f(p : int) -> (r : int)
  if true
    r = 1;
  end
end

%%% if-true-2
%! f() == 1;
func f() -> (r : int)
  if true
    r = 1;
  end
end

%%% if-false-1
%! f(0) == 2;
%! f(1) == 2;
func f(p : int) -> (r : int)
  if false
    r = 1;
  else
    r = 2;
  end
end

%%% if-false-2
%! f() == 2;
func f() -> (r : int)
  if false
    r = 1;
  else
    r = 2;
  end
end

%%% if-vardecl
%! f(0) == 3;
%! f(42) == 1;
func f(p : int) -> (r : int)
 var r1:int;
 if p != 0
   r1 = 1;
 else
   r1 = 3;
 end
 r = r1;
end

%%% if-var
%! f(true) == false;
func f(p : bool) -> (r : bool)
  if p
    r = false;
  else
    r = true;
  end
end

%%% if-call
%! f(1) == 2;
func g(p : int) -> (r : bool)
  r = (p == 1);
end

func f(p : int) -> (r : int)
  if g(p - 2)
    r = 0;
  elif g(p - 1)
    r = 1;
  elif g(p)
    r = 2;
  end
end

